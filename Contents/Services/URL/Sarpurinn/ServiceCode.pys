# -*- coding: utf-8 -*-
import urllib
TITLE = "Sarpurinn"
PREFIX = "/video/sarpurinn"
ART      = 'art-default.jpg'
ICON     = 'icon-default.png'
STREAM_URL = 'http://smooth.ruv.cache.is'
WEBSITE_URL = "http://ruv.is"


#def MetadataObjectForURL(url):
#	return VideoClipObject(
		#title = "Titill",
		#summary = "LELELELE",
		#thumb = "https://upload.wikimedia.org/wikipedia/en/b/bf/Ruvlogo2011.png",
#	)

def MediaObjectsForURL(url):
	vid_url = ""
	for nr in range(30):
		url_test = url + "R" + str(nr) + ".mp4"
		if (urllib.urlopen(url_test).getcode() == 200):
			vid_url = url_test
			break
	if (vid_url == ""):
		print "Not found on server"
	
	
	return [MediaObject(
					protocol = 'hls',
					video_codec = VideoCodec.H264,
					audio_codec = AudioCodec.AAC,
					video_resolution = "720",
					audio_channels = 2,
					#bitrate = int(2000),
					container = Container.MP4,
					optimized_for_streaming = True,
					parts = [PartObject(key = Callback(PlayVideo, url = vid_url))],
					#parts = [PartObject(key = HTTPLiveStreamURL(Callback(PlayVideo, url = url)))],
					#video_resolution = "hd"
				)
			]

@indirect
def PlayVideo(url):
	
	return IndirectResponse(VideoClipObject, key=url)
	#HTTP.Request(url).content 

# def NormalizeURL(url):
	#remove pause url tag
	# return url.rsplit('#!',1)[0]

# def TestURLs():
	# test_urls = []
	# json= JSON.ObjectFromURL('http://www.dr.dk/mu-online/api/1.3/page/tv/front')
	# for channels in json['Live']:
		# test_urls.append(WebsiteTVURL + '/live/' + channels['ChannelSlug'])
	# return test_urls